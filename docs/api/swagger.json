{
  "openapi": "3.0.0",
  "info": {
    "title": "Tiger Tag (public API)",
    "version": "0.0.1",
    "description": "The Tiger Tag API provides endpoints for retrieving various information related to aspects, brands, diameters, materials, measurement units, product filaments, types, and version details. All endpoints are public and do not require authentication."
  },
  "servers": [
    {
      "url": "https://api.tigertag.io/api:tigertag"
    }
  ],
  "paths": {
    "/all/last_update": {
      "get": {
        "summary": "Retrieve last update timestamp for all data",
        "description": "Returns a JSON object with the timestamp indicating the last update to any data in the system.",
        "tags": ["all"],
        "responses": {
          "200": {
            "description": "Success! Returns the last update timestamp.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lastUpdate": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "lastUpdate": "2025-03-31T12:00:00Z"
                }
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Access denied. Additional privileges are needed access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": { "description": "Rate Limited. Too many requests." },
          "500": { "description": "Unexpected error" }
        }
      }
    },
    "/aspect/get/all/by_page": {
      "get": {
        "summary": "Retrieve all aspects (paginated)",
        "description": "Returns a paginated list of aspects. Use the 'page' and 'per_page' query parameters to control pagination.",
        "tags": ["aspect"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number to retrieve.",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success! Returns a paginated list of aspects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                          },
                          "label": { "type": "string", "nullable": true }
                        }
                      }
                    },
                    "page": { "type": "integer", "format": "int64" },
                    "per_page": { "type": "integer", "format": "int64" },
                    "total": { "type": "integer", "format": "int64" }
                  }
                },
                "example": {
                  "data": [
                    { "id": 1, "label": "Smooth" },
                    { "id": 2, "label": "Rough" }
                  ],
                  "page": 1,
                  "per_page": 10,
                  "total": 2
                }
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": { "description": "Rate Limited. Too many requests." },
          "500": { "description": "Unexpected error" }
        }
      }
    },
    "/aspect/get/all": {
      "get": {
        "summary": "Retrieve all aspects",
        "description": "Returns a complete list of all available aspects.",
        "tags": ["aspect"],
        "responses": {
          "200": {
            "description": "Success! Returns an array of aspect objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                      },
                      "label": { "type": "string", "nullable": true }
                    }
                  }
                },
                "example": [
                  { "id": 1, "label": "Smooth" },
                  { "id": 2, "label": "Rough" }
                ]
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": { "description": "Rate Limited. Too many requests." },
          "500": { "description": "Unexpected error" }
        }
      }
    },
    "/aspect/get": {
      "get": {
        "summary": "Retrieve aspect by ID",
        "description": "Returns details for a specific aspect identified by its ID.",
        "tags": ["aspect"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Unique identifier of the aspect.",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success! Returns the aspect details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64",
                      "nullable": true
                    },
                    "label": { "type": "string", "nullable": true }
                  }
                },
                "example": { "id": 1, "label": "Smooth" }
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": { "description": "Rate Limited. Too many requests." },
          "500": { "description": "Unexpected error" }
        }
      }
    },
    "/aspect/last_update": {
      "get": {
        "summary": "Aspect data last update timestamp",
        "description": "Returns a JSON object with the timestamp of the last update to the aspect data.",
        "tags": ["aspect"],
        "responses": {
          "200": {
            "description": "Success! Returns the last update timestamp.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lastUpdate": { "type": "string", "format": "date-time" }
                  }
                },
                "example": { "lastUpdate": "2025-03-31T12:00:00Z" }
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": { "description": "Rate Limited. Too many requests." },
          "500": { "description": "Unexpected error" }
        }
      }
    },
    "/brand/get/all/by_page": {
      "get": {
        "summary": "Retrieve all brands (paginated)",
        "description": "Returns a paginated list of brands. Use the 'page' and 'per_page' query parameters to control pagination.",
        "tags": ["brand"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number to retrieve.",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success! Returns a paginated list of brands.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                          },
                          "name": { "type": "string", "nullable": true }
                        }
                      }
                    },
                    "page": { "type": "integer", "format": "int64" },
                    "per_page": { "type": "integer", "format": "int64" },
                    "total": { "type": "integer", "format": "int64" }
                  }
                },
                "example": {
                  "data": [
                    { "id": 1, "name": "Brand A" },
                    { "id": 2, "name": "Brand B" }
                  ],
                  "page": 1,
                  "per_page": 10,
                  "total": 2
                }
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": { "description": "Rate Limited. Too many requests." },
          "500": { "description": "Unexpected error" }
        }
      }
    },
    "/brand/get/all": {
      "get": {
        "summary": "Retrieve all brands",
        "description": "Returns a complete list of all available brands.",
        "tags": ["brand"],
        "responses": {
          "200": {
            "description": "Success! Returns an array of brand objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                      },
                      "name": { "type": "string", "nullable": true }
                    }
                  }
                },
                "example": [
                  { "id": 1, "name": "Brand A" },
                  { "id": 2, "name": "Brand B" }
                ]
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": { "description": "Rate Limited. Too many requests." },
          "500": { "description": "Unexpected error" }
        }
      }
    },
    "/brand/get": {
      "get": {
        "summary": "Retrieve brand by ID",
        "description": "Returns details for a specific brand identified by its ID.",
        "tags": ["brand"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Unique identifier of the brand.",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success! Returns the brand details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64",
                      "nullable": true
                    },
                    "name": { "type": "string", "nullable": true }
                  }
                },
                "example": { "id": 1, "name": "Brand A" }
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": { "description": "Rate Limited. Too many requests." },
          "500": { "description": "Unexpected error" }
        }
      }
    },
    "/brand/last_update": {
      "get": {
        "summary": "Brand data last update timestamp",
        "description": "Returns a JSON object with the timestamp of the last update to the brand data.",
        "tags": ["brand"],
        "responses": {
          "200": {
            "description": "Success! Returns the last update timestamp.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lastUpdate": { "type": "string", "format": "date-time" }
                  }
                },
                "example": { "lastUpdate": "2025-03-31T12:00:00Z" }
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": { "description": "Rate Limited. Too many requests." },
          "500": { "description": "Unexpected error" }
        }
      }
    },
    "/diameter/filament/get/all/by_page": {
      "get": {
        "summary": "Retrieve all filament diameters (paginated)",
        "description": "Returns a paginated list of filament diameters. Use the 'page' and 'per_page' query parameters to control pagination.",
        "tags": ["diameter"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number to retrieve.",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success! Returns a paginated list of filament diameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                          },
                          "label": { "type": "string", "nullable": true }
                        }
                      }
                    },
                    "page": { "type": "integer", "format": "int64" },
                    "per_page": { "type": "integer", "format": "int64" },
                    "total": { "type": "integer", "format": "int64" }
                  }
                },
                "example": {
                  "data": [
                    { "id": 1, "label": "1.75mm" },
                    { "id": 2, "label": "2.85mm" }
                  ],
                  "page": 1,
                  "per_page": 10,
                  "total": 2
                }
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": { "description": "Rate Limited. Too many requests." },
          "500": { "description": "Unexpected error" }
        }
      }
    },
    "/diameter/filament/get/all": {
      "get": {
        "summary": "Retrieve all filament diameters",
        "description": "Returns a complete list of all filament diameters.",
        "tags": ["diameter"],
        "responses": {
          "200": {
            "description": "Success! Returns an array of filament diameter objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                      },
                      "label": { "type": "string", "nullable": true }
                    }
                  }
                },
                "example": [
                  { "id": 1, "label": "1.75mm" },
                  { "id": 2, "label": "2.85mm" }
                ]
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": { "description": "Rate Limited. Too many requests." },
          "500": { "description": "Unexpected error" }
        }
      }
    },
    "/diameter/filament/get": {
      "get": {
        "summary": "Retrieve filament diameter by ID",
        "description": "Returns details for a specific filament diameter identified by its ID.",
        "tags": ["diameter"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Unique identifier of the filament diameter.",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success! Returns the filament diameter details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64",
                      "nullable": true
                    },
                    "label": { "type": "string", "nullable": true }
                  }
                },
                "example": { "id": 1, "label": "1.75mm" }
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": { "description": "Rate Limited. Too many requests." },
          "500": { "description": "Unexpected error" }
        }
      }
    },
    "/diameter/filament/last_update": {
      "get": {
        "summary": "Filament diameter last update timestamp",
        "description": "Returns a JSON object with the timestamp of the last update to the filament diameter data.",
        "tags": ["diameter"],
        "responses": {
          "200": {
            "description": "Success! Returns the last update timestamp.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lastUpdate": { "type": "string", "format": "date-time" }
                  }
                },
                "example": { "lastUpdate": "2025-03-31T12:00:00Z" }
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": { "description": "Rate Limited. Too many requests." },
          "500": { "description": "Unexpected error" }
        }
      }
    },
    "/material/filament/get/all/by_page": {
      "get": {
        "summary": "Retrieve all filament materials (paginated)",
        "description": "Returns a paginated list of filament materials. Use 'page', 'per_page', and optionally 'lang' query parameters.",
        "tags": ["material"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number to retrieve.",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page.",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Language code (e.g., 'en', 'fr').",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success! Returns a paginated list of filament materials.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                          },
                          "name": { "type": "string", "nullable": true }
                        }
                      }
                    },
                    "page": { "type": "integer", "format": "int64" },
                    "per_page": { "type": "integer", "format": "int64" },
                    "total": { "type": "integer", "format": "int64" }
                  }
                },
                "example": {
                  "data": [
                    { "id": 1, "name": "PLA" },
                    { "id": 2, "name": "ABS" }
                  ],
                  "page": 1,
                  "per_page": 10,
                  "total": 2
                }
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": { "description": "Rate Limited. Too many requests." },
          "500": { "description": "Unexpected error" }
        }
      }
    },
    "/material/filament/get/all": {
      "get": {
        "summary": "Retrieve all filament materials",
        "description": "Returns a complete list of all filament materials. Optional query parameters include 'lang' and 'light'.",
        "tags": ["material"],
        "parameters": [
          {
            "name": "lang",
            "in": "query",
            "description": "Language code (e.g., 'en').",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "light",
            "in": "query",
            "description": "Boolean flag to retrieve a lightweight version of the data.",
            "required": false,
            "schema": { "type": "boolean" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success! Returns an array of filament material objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                          },
                          "name": { "type": "string", "nullable": true }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": [
                    { "id": 1, "name": "PLA" },
                    { "id": 2, "name": "ABS" }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": { "description": "Rate Limited. Too many requests." },
          "500": { "description": "Unexpected error" }
        }
      }
    },
    "/material/filament/get": {
      "get": {
        "summary": "Retrieve filament material by ID",
        "description": "Returns details for a specific filament material identified by its ID.",
        "tags": ["material"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Unique identifier of the filament material.",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Language code (e.g., 'en').",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success! Returns the filament material details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64",
                      "nullable": true
                    },
                    "name": { "type": "string", "nullable": true }
                  }
                },
                "example": { "id": 1, "name": "PLA" }
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": { "description": "Rate Limited. Too many requests." },
          "500": { "description": "Unexpected error" }
        }
      }
    },
    "/material/filament/last_update": {
      "get": {
        "summary": "Filament material last update timestamp",
        "description": "Returns a JSON object with the timestamp of the last update to the filament material data.",
        "tags": ["material"],
        "responses": {
          "200": {
            "description": "Success! Returns the last update timestamp.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lastUpdate": { "type": "string", "format": "date-time" }
                  }
                },
                "example": { "lastUpdate": "2025-03-31T12:00:00Z" }
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": { "description": "Rate Limited. Too many requests." },
          "500": { "description": "Unexpected error" }
        }
      }
    },
    "/measure_unit/get/all/by_page": {
      "get": {
        "summary": "Retrieve all measurement units (paginated)",
        "description": "Returns a paginated list of measurement units. Use 'page', 'per_page', and optionally 'lang' query parameters.",
        "tags": ["measure_unit"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number to retrieve.",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page.",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Language code (e.g., 'en').",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success! Returns a paginated list of measurement units.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                          },
                          "unit": { "type": "string", "nullable": true }
                        }
                      }
                    },
                    "page": { "type": "integer", "format": "int64" },
                    "per_page": { "type": "integer", "format": "int64" },
                    "total": { "type": "integer", "format": "int64" }
                  }
                },
                "example": {
                  "data": [
                    { "id": 1, "unit": "mm" },
                    { "id": 2, "unit": "cm" }
                  ],
                  "page": 1,
                  "per_page": 10,
                  "total": 2
                }
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": { "description": "Rate Limited. Too many requests." },
          "500": { "description": "Unexpected error" }
        }
      }
    },
    "/measure_unit/get/all": {
      "get": {
        "summary": "Retrieve all measurement units",
        "description": "Returns a complete list of all measurement units. Optional query parameter 'lang' can be used to specify the language.",
        "tags": ["measure_unit"],
        "parameters": [
          {
            "name": "lang",
            "in": "query",
            "description": "Language code (e.g., 'en').",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success! Returns an array of measurement unit objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                          },
                          "unit": { "type": "string", "nullable": true }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": [
                    { "id": 1, "unit": "mm" },
                    { "id": 2, "unit": "cm" }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": { "description": "Rate Limited. Too many requests." },
          "500": { "description": "Unexpected error" }
        }
      }
    },
    "/measure_unit/get": {
      "get": {
        "summary": "Retrieve measurement unit by ID",
        "description": "Returns details for a specific measurement unit identified by its ID.",
        "tags": ["measure_unit"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Unique identifier of the measurement unit.",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Language code (e.g., 'en').",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success! Returns the measurement unit details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64",
                      "nullable": true
                    },
                    "unit": { "type": "string", "nullable": true }
                  }
                },
                "example": { "id": 1, "unit": "mm" }
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": { "description": "Rate Limited. Too many requests." },
          "500": { "description": "Unexpected error" }
        }
      }
    },
    "/measure_unit/last_update": {
      "get": {
        "summary": "Measurement unit last update timestamp",
        "description": "Returns a JSON object with the timestamp of the last update to the measurement unit data.",
        "tags": ["measure_unit"],
        "responses": {
          "200": {
            "description": "Success! Returns the last update timestamp.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lastUpdate": { "type": "string", "format": "date-time" }
                  }
                },
                "example": { "lastUpdate": "2025-03-31T12:00:00Z" }
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": { "description": "Rate Limited. Too many requests." },
          "500": { "description": "Unexpected error" }
        }
      }
    },
    "/product/filament/get_infos": {
      "post": {
        "summary": "Retrieve product filament information",
        "description": "Retrieves detailed product information for a filament based on various criteria. Accepts JSON or multipart/form-data.",
        "tags": ["product"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type_id": { "type": "integer", "format": "int64" },
                  "material_id": { "type": "integer", "format": "int64" },
                  "diameter_id": { "type": "integer", "format": "int64" },
                  "aspect1_id": { "type": "integer", "format": "int64" },
                  "aspect2_id": { "type": "integer", "format": "int64" },
                  "measure_id": { "type": "integer", "format": "int64" },
                  "brand_id": { "type": "integer", "format": "int64" },
                  "lang": { "type": "string" }
                },
                "required": [
                  "type_id",
                  "material_id",
                  "diameter_id",
                  "aspect1_id",
                  "aspect2_id",
                  "measure_id",
                  "brand_id"
                ]
              },
              "example": {
                "type_id": 1,
                "material_id": 1,
                "diameter_id": 1,
                "aspect1_id": 1,
                "aspect2_id": 2,
                "measure_id": 1,
                "brand_id": 1,
                "lang": "en"
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "type_id": { "type": "integer", "format": "int64" },
                  "material_id": { "type": "integer", "format": "int64" },
                  "diameter_id": { "type": "integer", "format": "int64" },
                  "aspect1_id": { "type": "integer", "format": "int64" },
                  "aspect2_id": { "type": "integer", "format": "int64" },
                  "measure_id": { "type": "integer", "format": "int64" },
                  "brand_id": { "type": "integer", "format": "int64" },
                  "lang": { "type": "string" }
                },
                "required": [
                  "type_id",
                  "material_id",
                  "diameter_id",
                  "aspect1_id",
                  "aspect2_id",
                  "measure_id",
                  "brand_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success! Returns detailed product filament information.",
            "content": {
              "application/json": {
                "schema": { "type": "object" },
                "example": {
                  "productInfo": {
                    "uid": 123456789,
                    "description": "High quality PLA filament",
                    "specs": {
                      "diameter": "1.75mm",
                      "material": "PLA"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": { "description": "Rate Limited. Too many requests." },
          "500": { "description": "Unexpected error" }
        }
      }
    },
    "/product/filament/get": {
      "get": {
        "summary": "Retrieve specific product filament",
        "description": "Retrieves product filament details using RFID chip UID and product ID.",
        "tags": ["product"],
        "parameters": [
          {
            "name": "uid",
            "in": "query",
            "description": "RFID chip UID.",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "product_id",
            "in": "query",
            "description": "Unique identifier for the product.",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success! Returns detailed product filament information.",
            "content": {
              "application/json": {
                "schema": { "type": "object" },
                "example": {
                  "uid": 123456789,
                  "product_id": 1,
                  "description": "High quality PLA filament",
                  "specs": {
                    "diameter": "1.75mm",
                    "material": "PLA"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": { "description": "Rate Limited. Too many requests." },
          "500": { "description": "Unexpected error" }
        }
      }
    },
    "/type/get/all": {
      "get": {
        "summary": "Retrieve all types",
        "description": "Returns a complete list of all available types.",
        "tags": ["type"],
        "responses": {
          "200": {
            "description": "Success! Returns an array of type objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                      },
                      "label": { "type": "string" }
                    }
                  }
                },
                "example": [
                  { "id": 1, "label": "3D Printer Filament" },
                  { "id": 2, "label": "Extrusion Filament" }
                ]
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": { "description": "Rate Limited. Too many requests." },
          "500": { "description": "Unexpected error" }
        }
      }
    },
    "/type/last_update": {
      "get": {
        "summary": "Type data last update timestamp",
        "description": "Returns a JSON object with the timestamp of the last update to the type data.",
        "tags": ["type"],
        "responses": {
          "200": {
            "description": "Success! Returns the last update timestamp.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lastUpdate": { "type": "string", "format": "date-time" }
                  }
                },
                "example": { "lastUpdate": "2025-03-31T12:00:00Z" }
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": { "description": "Rate Limited. Too many requests." },
          "500": { "description": "Unexpected error" }
        }
      }
    },
    "/version/get/all": {
      "get": {
        "summary": "Retrieve API version information",
        "description": "Returns the current version information of the API.",
        "tags": ["version"],
        "responses": {
          "200": {
            "description": "Success! Returns version information.",
            "content": {
              "application/json": {
                "schema": { "type": "object" },
                "example": { "version": "0.0.1", "releaseDate": "2025-03-01" }
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": { "description": "Rate Limited. Too many requests." },
          "500": { "description": "Unexpected error" }
        }
      }
    },
    "/version/last_update": {
      "get": {
        "summary": "API version last update timestamp",
        "description": "Returns a JSON object with the timestamp of the last update to the version information.",
        "tags": ["version"],
        "responses": {
          "200": {
            "description": "Success! Returns the last update timestamp.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lastUpdate": { "type": "string", "format": "date-time" }
                  }
                },
                "example": { "lastUpdate": "2025-03-31T12:00:00Z" }
              }
            }
          },
          "400": {
            "description": "Input Error. Check the request payload for issues."
          },
          "401": { "description": "Unauthorized" },
          "403": {
            "description": "Access denied. Additional privileges are needed to access the requested resource."
          },
          "404": {
            "description": "Not Found. The requested resource does not exist."
          },
          "429": { "description": "Rate Limited. Too many requests." },
          "500": { "description": "Unexpected error" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {}
  }
}
